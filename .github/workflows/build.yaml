name: build

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '**'
  release:
    types:
      - published
  workflow_dispatch:

permissions:
    contents: write

env:
  GitBranch: ${{ github.head_ref || github.ref_name }}
  AlpineDotnet: /home/runner/work/EnvToJson/EnvToJson/.dotnet

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: setup alpine
        uses: jirutka/setup-alpine@v1
        with:
          branch: v3.21
          packages: >
            bash
            build-base
            ca-certificates-bundle
            clang
            git
            icu-libs
            libgcc
            libssl3
            libstdc++
            zip
            zlib
            zlib-dev
      - name: git config
        run: git config --global --add safe.directory "$(pwd)"
        shell: alpine.sh --root {0}
      - name: setup cache
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.Packages.props') }}
          restore-keys: |
            ${{ runner.os }}-nuget
      - name: setup dotnet
        env:
          DOTNET_ROOT: ${{ env.AlpineDotnet }}
        run: |
          wget https://dot.net/v1/dotnet-install.sh
          chmod +x ./dotnet-install.sh
          ./dotnet-install.sh --channel 8.0 --no-path --install-dir "${{ env.AlpineDotnet }}"
          ./.dotnet/dotnet --info
        shell: alpine.sh --root {0}
      - name: dotnet restore
        run: dotnet restore
      - name: dotnet build
        run: dotnet build --configuration Release --no-restore
      - name: dotnet test
        run: dotnet test --configuration Release --no-restore --verbosity normal
      - name: dotnet publish - native-linux
        run: |
          rm -rf artifacts/publish
          dotnet publish --configuration Release
          zip --recurse-paths --junk-paths EnvToJson-native-linux.zip artifacts/publish/EnvToJson/release -x *.dbg
      - name: upload artifact - native-linux
        uses: actions/upload-artifact@v4
        with:
          name: EnvToJson-native-linux
          path: artifacts/publish/EnvToJson/release/
      - name: dotnet publish - native-linux-musl
        env:
          DOTNET_ROOT: ${{ env.AlpineDotnet }}
        run: |
          rm -rf artifacts/publish
          ./.dotnet/dotnet publish --configuration Release
          zip --recurse-paths --junk-paths EnvToJson-native-linux-musl.zip artifacts/publish/EnvToJson/release -x *.dbg
        shell: alpine.sh --root {0}
      - name: upload artifact - native-linux-musl
        uses: actions/upload-artifact@v4
        with:
          name: EnvToJson-native-linux-musl
          path: artifacts/publish/EnvToJson/release/
      - name: upload release artifacts
        if: github.event_name == 'release' && github.event.action == 'published'
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}
        run: |
          gh release upload ${{github.event.release.tag_name}} EnvToJson-native-linux.zip
          gh release upload ${{github.event.release.tag_name}} EnvToJson-native-linux-musl.zip
